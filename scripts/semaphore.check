#!/usr/bin/env ruby
require "rubygems"
require "json"
require "time"

class SemaphoreBuildStatus
  def initialize(json)
    @status = JSON.parse(json)

  rescue JSON::ParserError
    raise RuntimeError, "invalid json: '#{json}'"
  end

  def number
    @status["build_number"]
  end

  def branch
    @status["branch_name"]
  end

  def ok?
    @status["result"] == "passed"
  end

  def started_at
    Time.parse(@status["started_at"])
  end

  def finished_at
    Time.parse(@status["finished_at"])
  end

  def duration
    Time.at(finished_at - started_at).gmtime.strftime("%R:%S")
  end

  def formatted_started_at
    started_at.strftime("%I:%M%p %m/%d/%Y %Z")
  end

  def last_commit_short_sha
    @status["commit"]["id"]
  end

  def last_commit_author
    @status["commit"]["author_name"]
  end

  def last_commit_message
    @status["commit"]["message"]
  end

  def as_json(*)
    {
      :result => ok?,
      :changing => false,
      :url => @status["branch_url"],
      :info => [
        ["Build #", number],
        ["Duration", duration],
        ["Started", formatted_started_at],
        ["-", ""],
        ["SHA", last_commit_short_sha],
        ["Branch", branch],
        ["Message", last_commit_message],
        ["Author", last_commit_author]
      ]
    }
  end

  def to_json(*)
    JSON.dump(as_json)
  end
end

class Semaphore
  def initialize(url)
    raise ArgumentError "url must not be nil" unless url
    @url = url
  end

  def latest_status
    SemaphoreBuildStatus.new(http_get(@url))
  end

  private

  def http_get(url)
    curl = "curl -s #{url}"
    `#{curl}`.tap { |o| $stderr.puts curl, o }
  end
end

puts Semaphore.new(*ARGV).latest_status.to_json
