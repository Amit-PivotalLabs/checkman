#!/usr/bin/env ruby
require "rubygems"
require "json"

class VmcAppsStatus
  def initialize(app_prefix, vmc_output)
    @apps_data = JSON.parse(vmc_output)
    @apps_data \
      .select! { |app| app["name"].start_with?(app_prefix) } \
      .sort_by! { |app| app["name"] }
  end

  def all_100_percent?
    @apps_data.all? do |app|
      app["runningInstances"].to_i == app["instances"].to_i
    end
  end

  def as_json(*)
    {
      :result => all_100_percent?,
      :changing => false,
      :url => nil,
      :info => info
    }
  end

  def to_json(*)
    JSON.dump(as_json)
  end

  private

  def info
    @apps_data.map do |app|
      [app["name"], app_details(app)]
    end
  end

  def app_details(app)
    [ "#{app["runningInstances"]}/#{app["instances"]}",
      "#{app["state"]} -",
      "#{app["resources"]["memory"]}MB / #{app["resources"]["disk"]}MB"
    ].join(" ")
  end
end

class VmcApps
  def initialize(directory, app_prefix)
    raise ArgumentError "directory must not be nil" unless directory
    @directory = File.expand_path(directory)

    raise ArgumentError "app_prefix must not be nil" unless app_prefix
    @app_prefix = app_prefix
  end

  def latest_status
    VmcAppsStatus.new(@app_prefix, run)
  end

  private

  def run
    Dir.chdir(@directory) { `vmc curl Get /apps` }
  end
end

puts VmcApps.new(*ARGV).latest_status.to_json
